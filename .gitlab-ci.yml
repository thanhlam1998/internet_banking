stages:
  - provision
  - build
  - deploy

provision:
  stage: provision
  image:
    name: hashicorp/terraform:latest
    entrypoint: ["/bin/sh", "-c"]
  before_script:
    - cd ./terraform/
  script:
    - terraform init
    - terraform validate
    - terraform apply -auto-approve
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  script:
    - docker build --pull -t "$DOCKER_USERNAME/node-kubernetes:$CI_COMMIT_SHORT_SHA" nodejs
    - docker push "$DOCKER_USERNAME/node-kubernetes:$CI_COMMIT_SHORT_SHA" 
    - docker push "$DOCKER_USERNAME/node-kubernetes:latest" 
    - docker build --pull -t "$DOCKER_USERNAME/bank-frontend-kubernetes:$CI_COMMIT_SHORT_SHA" frontend
    - docker push "$DOCKER_USERNAME/bank-frontend-kubernetes:$CI_COMMIT_SHORT_SHA" 
    - docker push "$DOCKER_USERNAME/bank-frontend-kubernetes:latest" 
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

deploy_staging:
  stage: deploy
  image: google/cloud-sdk:alpine
  before_script:
    - gcloud auth activate-service-account --key-file=$GCLOUD_SERVICE_KEY
    - gcloud config set project $GCLOUD_PROJECT
    - gcloud container clusters get-credentials $CLOUDSDK_CONTAINER_CLUSTER
    - gcloud components install kubectl
    - sed -i "s/\#VERSION\#/$CI_COMMIT_SHORT_SHA/g" ./kubernetes/nodejs-deployment.yaml
    - sed -i "s/\#VERSION\#/$CI_COMMIT_SHORT_SHA/g" ./kubernetes/frontend-deployment.yml
  script:
    - kubectl apply -f ./kubernetes/
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
