stages:
  - provision
  - build
  - deploy

provision:
  stage: provision
  image:
    name: hashicorp/terraform:latest
    entrypoint: ["/bin/sh", "-c"]
  before_script:
    - cd ./terraform/
  script:
    - terraform init
    - terraform validate
    - terraform apply -auto-approve
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  script:
    - docker build --pull -t "$DOCKER_USERNAME/node-kubernetes:$CI_COMMIT_SHORT_SHA" nodejs
    - docker push "$DOCKER_USERNAME/node-kubernetes:$CI_COMMIT_SHORT_SHA" 
    - docker build --pull -t "$DOCKER_USERNAME/bank-frontend-kubernetes:$CI_COMMIT_SHORT_SHA" frontend
    - docker push "$DOCKER_USERNAME/bank-frontend-kubernetes:$CI_COMMIT_SHORT_SHA" 
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

.gcloud: &gcloud
  - echo $GCLOUD_SERVICE_KEY | base64 --decode -i > ~/gcloud-service-key.json
  - gcloud auth activate-service-account --key-file ~/gcloud-service-key.json
  - gcloud --quiet container clusters get-credentials $CLOUDSDK_CONTAINER_CLUSTER

.prod_deploy: &prod_deploy
  image: google/cloud-sdk
  stage: deploy
  environment: production
  before_script: *gcloud
  script:
    - kubectl apply -f kubernetes
    - kubectl patch deployment nodejs -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"date\":\"`date +'%s'`\"}}}}}"
    - kubectl patch deployment frontend -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"date\":\"`date +'%s'`\"}}}}}"

auto-deploy-master:
  <<: *prod_deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
